{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sepul\\\\Desktop\\\\react-module\\\\secondmodule\\\\client\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport { useQuery } from '@apollo/client';\nimport { QUERY_THOUGHTS, QUERY_ME_BASIC } from '../utils/queries';\nimport ThoughtList from '../components/ThoughtList';\nimport Auth from '../utils/auth';\nimport FriendList from '../components/FriendList';\nimport ThoughtForm from '../components/ThoughtForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  // use object destructuring to extract `data` from the `useQuery` Hook's response and rename it `userData` to be more descriptive\n  const {\n    data: userData\n  } = useQuery(QUERY_ME_BASIC);\n  const {\n    loading,\n    data\n  } = useQuery(QUERY_THOUGHTS);\n  const thoughts = (data === null || data === void 0 ? void 0 : data.thoughts) || [];\n  const loggedIn = Auth.loggedIn();\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-row justify-space-between\",\n      children: [loggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 mb-3\",\n        children: /*#__PURE__*/_jsxDEV(ThoughtForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `col-12 mb-3 ${loggedIn && 'col-lg-8'}`,\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(ThoughtList, {\n          thoughts: thoughts,\n          title: \"Some Feed for Thought(s)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), loggedIn && userData ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-lg-3 mb-3\",\n        children: /*#__PURE__*/_jsxDEV(FriendList, {\n          username: userData.me.username,\n          friendCount: userData.me.friendCount,\n          friends: userData.me.friends\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"AfBxwGm8vY/vPTmOqRgbsVBHQEI=\", false, function () {\n  return [useQuery, useQuery];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useQuery","QUERY_THOUGHTS","QUERY_ME_BASIC","ThoughtList","Auth","FriendList","ThoughtForm","jsxDEV","_jsxDEV","Home","_s","data","userData","loading","thoughts","loggedIn","children","className","fileName","_jsxFileName","lineNumber","columnNumber","title","username","me","friendCount","friends","_c","$RefreshReg$"],"sources":["C:/Users/sepul/Desktop/react-module/secondmodule/client/src/pages/Home.js"],"sourcesContent":["import { useQuery } from '@apollo/client'\r\nimport { QUERY_THOUGHTS, QUERY_ME_BASIC } from '../utils/queries'\r\nimport ThoughtList from '../components/ThoughtList'\r\nimport Auth from '../utils/auth'\r\nimport FriendList from '../components/FriendList'\r\nimport ThoughtForm from '../components/ThoughtForm'\r\n\r\nconst Home = () => {\r\n  // use object destructuring to extract `data` from the `useQuery` Hook's response and rename it `userData` to be more descriptive\r\n  const { data: userData } = useQuery(QUERY_ME_BASIC)\r\n  const { loading, data } = useQuery(QUERY_THOUGHTS)\r\n  const thoughts = data?.thoughts || []\r\n  const loggedIn = Auth.loggedIn()\r\n\r\n  return (\r\n    <main>\r\n      <div className='flex-row justify-space-between'>\r\n          {loggedIn && (\r\n            <div className=\"col-12 mb-3\">\r\n              <ThoughtForm />\r\n            </div>\r\n          )}\r\n        <div className={`col-12 mb-3 ${loggedIn && 'col-lg-8'}`}>\r\n          {\r\n            loading ? (\r\n              <div>Loading...</div>\r\n            ) : (\r\n              <ThoughtList thoughts={thoughts} title=\"Some Feed for Thought(s)\" />\r\n            )\r\n          }\r\n        </div>\r\n          {loggedIn && userData ? (\r\n            <div className=\"col-12 col-lg-3 mb-3\">\r\n                  <FriendList\r\n                    username={userData.me.username}\r\n                    friendCount={userData.me.friendCount}\r\n                    friends={userData.me.friends}\r\n                  />\r\n            </div>\r\n          ) : null}\r\n      </div>\r\n   \r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Home\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,cAAc,EAAEC,cAAc,QAAQ,kBAAkB;AACjE,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,IAAI,MAAM,eAAe;AAChC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,WAAW,MAAM,2BAA2B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB;EACA,MAAM;IAAEC,IAAI,EAAEC;EAAS,CAAC,GAAGZ,QAAQ,CAACE,cAAc,CAAC;EACnD,MAAM;IAAEW,OAAO;IAAEF;EAAK,CAAC,GAAGX,QAAQ,CAACC,cAAc,CAAC;EAClD,MAAMa,QAAQ,GAAG,CAAAH,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEG,QAAQ,KAAI,EAAE;EACrC,MAAMC,QAAQ,GAAGX,IAAI,CAACW,QAAQ,CAAC,CAAC;EAEhC,oBACEP,OAAA;IAAAQ,QAAA,eACER,OAAA;MAAKS,SAAS,EAAC,gCAAgC;MAAAD,QAAA,GAC1CD,QAAQ,iBACPP,OAAA;QAAKS,SAAS,EAAC,aAAa;QAAAD,QAAA,eAC1BR,OAAA,CAACF,WAAW;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CACN,eACHb,OAAA;QAAKS,SAAS,EAAG,eAAcF,QAAQ,IAAI,UAAW,EAAE;QAAAC,QAAA,EAEpDH,OAAO,gBACLL,OAAA;UAAAQ,QAAA,EAAK;QAAU;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,gBAErBb,OAAA,CAACL,WAAW;UAACW,QAAQ,EAAEA,QAAS;UAACQ,KAAK,EAAC;QAA0B;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MACpE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEA,CAAC,EACHN,QAAQ,IAAIH,QAAQ,gBACnBJ,OAAA;QAAKS,SAAS,EAAC,sBAAsB;QAAAD,QAAA,eAC/BR,OAAA,CAACH,UAAU;UACTkB,QAAQ,EAAEX,QAAQ,CAACY,EAAE,CAACD,QAAS;UAC/BE,WAAW,EAAEb,QAAQ,CAACY,EAAE,CAACC,WAAY;UACrCC,OAAO,EAAEd,QAAQ,CAACY,EAAE,CAACE;QAAQ;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,GACJ,IAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEF,CAAC;AAEX,CAAC;AAAAX,EAAA,CArCKD,IAAI;EAAA,QAEmBT,QAAQ,EACTA,QAAQ;AAAA;AAAA2B,EAAA,GAH9BlB,IAAI;AAuCV,eAAeA,IAAI;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}